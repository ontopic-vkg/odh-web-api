title="Constract queries"

[accommodation]
name="accommodation"
query="""
BASE <http://noi.example.org/data/accommodation/>
PREFIX schema: <http://schema.org/>
 CONSTRUCT {
   ?newH a ?cl ; schema:name ?nameStr ; schema:description ?descStr ;  schema:image ?imageurltoshow ; schema:email ?email ;
   schema:url ?url ; schema:telephone ?telephone ;
     schema:address [
    a schema:PostalAddress ; schema:name ?nameStr ; schema:alternateName ?aAltNameStr;
    schema:addressRegion ?province; schema:addressCountry ?country; schema:addressLocality ?aLocalityStr ; schema:streetAddress ?aStreetStr ;  schema:postalCode ?aZip ; schema:telephone ?telephone; schema:email ?email ;  schema:faxNumber ?fax  ] ;
    schema:geo [ a schema:GeoCoordinates ; schema:latitude ?gLatitudeStr ; schema:longitude ?gLongitudeStr ] ;
     schema:starRating [a schema:Rating ; schema:ratingValue ?sRatingStr] .

 }
 WHERE {
   # Show the @id property in Json LD default value true
   BIND (!(COALESCE(?showid, "true") = "false") AS ?bShowId)

   BIND (IRI(?Id) AS ?h)
   BIND (COALESCE(?idtoshow, IRI(CONCAT("http://service.suedtirol.info/api/Accommodation/", ?Id)))  AS ?defaultH)
   BIND (IF(?bShowId, ?defaultH, BNODE()) AS ?newH)
   BIND (IF(?language = "ru" || ?language = "fr" || ?language = "pl" || ?language = "cs" || ?language = "de" || ?language = "nl" || ?language = "it"
   , ?language, "en") AS  ?normalizedLanguage )

   VALUES (?province ?normalizedLanguage ) {
   ("Südtirol - Alto Adige" "en")
   ("Alto Adige" "it")
   ("Южный Тирол" "ru")
   ("Sud-Tyrol" "fr")
   ("Południowy Tyrol" "pl")
   ("Itálie" "cs")
   ("Italien" "de")
   ("Italië" "nl")
   }

   VALUES (?country ?normalizedLanguage ) {
      ("Italia" "it")
      ("Italy" "en")
      ("Италия" "ru")
      ("Italie" "fr")
      ("Włochy" "pl")
      ("Jižní Tyrolsko" "cs")
      ("Südtirol" "de")
      ("Südtirol" "nl")
      }

   ?h a schema:LodgingBusiness ;
   schema:address ?a ; schema:geo ?g ;
   schema:starRating ?s .
   ?a a schema:PostalAddress .
   ?g a schema:GeoCoordinates .
   ?s a schema:Rating .

#   BIND (IRI(CONCAT("http://noi.example.org/data/gastronomy/GASTRO", ?Id)) AS ?gastronomy)
#
#   OPTIONAL {
#     ?gastronomy  a schema:FoodEstablishment ; schema:url ?url .
#   }

     # if  language exist use it
    OPTIONAL {
       ?h schema:name ?name .
        FILTER (?language = lang(?name)  && ?language != "en")
#        FILTER (langMatches ( lang(?name), ?language))
     }

    # if  language does not exist use english
     OPTIONAL {
      ?h schema:name ?name .
        FILTER ("en" = lang(?name))
#     FILTER (langMatches ( lang(?name), "en"))
    }

   OPTIONAL {
     ?h schema:description ?desc .
     FILTER (?language = lang(?desc) && ?language != "en" )
   }
   OPTIONAL {
    ?h schema:description ?desc .
    FILTER ("en" = lang(?desc))
  }

    OPTIONAL {
        ?h schema:image ?imageurltoshow .
     }

    OPTIONAL {
        ?h schema:email ?email .
     }

     OPTIONAL {
        ?h schema:telephone ?telephone .
     }

          OPTIONAL {
        ?h schema:fax ?fax .
     }

   OPTIONAL {
     ?h a schema:Hotel .
     BIND (schema:Hotel AS ?c)
   }
   OPTIONAL {
     ?h a schema:Campground .
     BIND (schema:Campground AS ?c)
   }
   OPTIONAL {
     ?h a schema:BedAndBreakfast .
     BIND (schema:BedAndBreakfast AS ?c)
   }
   OPTIONAL {
     ?h a schema:Hostel .
     BIND (schema:Hostel AS ?c)
   }
   BIND (COALESCE(?c, schema:LodgingBusiness) AS ?cl)

#   OPTIONAL {
#          ?a schema:name ?aName .
#           FILTER (?language = lang(?aName)  && ?language != "en")
#        }
#
#        OPTIONAL {
#         ?a schema:name ?aName .
#           FILTER ("en" = lang(?aName))
#       }

    OPTIONAL {
        ?a schema:addressLocality ?aLocality .
        FILTER (?language = lang(?aLocality)  && ?language != "en")
     }

     OPTIONAL {
        ?a schema:addressLocality ?aLocality .
        FILTER ("en" = lang(?aLocality))
     }
   OPTIONAL {
     ?a schema:alternateName ?aAltName .
     FILTER (?language  = lang(?aAltName) && ?language != "en")
   }
     OPTIONAL {
       ?a schema:alternateName ?aAltName .
       FILTER ("en" = lang(?aAltName))
     }

     OPTIONAL {
       ?a schema:postalCode ?aZip .
     }

        OPTIONAL {
     ?a schema:streetAddress ?aStreet .
     FILTER (?language  = lang(?aStreet) && ?language != "en")
   }
     OPTIONAL {
       ?a schema:streetAddress ?aStreet .
       FILTER ("en" = lang(?aStreet))
     }


    OPTIONAL {
          ?g schema:latitude ?gLatitude .
   }

   OPTIONAL {
          ?g  schema:longitude ?gLongitude .
   }

   OPTIONAL {
          ?s  schema:ratingValue ?sRating .
   }



    BIND(str(?name) AS ?nameStr)
   BIND(str(?desc) AS ?descStr)
   BIND(str(?aAltName) AS ?aAltNameStr)
#   BIND(str(?aName) AS ?anameStr)
    BIND(str(?aStreet) AS ?aStreetStr)
   BIND(str(?aLocality) AS ?aLocalityStr)
   BIND(str(?gLatitude) AS ?gLatitudeStr)
   BIND(str(?gLongitude) AS ?gLongitudeStr)
   BIND(str(COALESCE(?sRating, 0)) AS ?sRatingStr)

 }
"""
